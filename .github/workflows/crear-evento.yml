name: Depurar WebApp Calendar

on:
  workflow_dispatch:
    inputs:
      title:
        description: "Título"
        required: false
        default: "Prueba desde GitHub"
      start:
        description: "Inicio (RFC3339, ej. 2025-10-01T12:00:00+02:00)"
        required: true
      end:
        description: "Fin (RFC3339, ej. 2025-10-01T12:30:00+02:00)"
        required: true
      description:
        description: "Descripción"
        required: false
        default: "Evento de prueba"

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Comprobar secrets presentes
        run: |
          test -n "${{ secrets.WEBAPP_URL }}"    || { echo "FALTA secret WEBAPP_URL"; exit 1; }
          test -n "${{ secrets.WEBAPP_SECRET }}" || { echo "FALTA secret WEBAPP_SECRET"; exit 1; }
          echo "Secrets OK"

      - name: GET de salud (comprobar versión y URL)
        run: |
          echo "Llamando GET a: ${{ secrets.WEBAPP_URL }}"
          curl -sS -L -D headers_get.txt -o body_get.txt "${{ secrets.WEBAPP_URL }}"
          echo "== Cabeceras GET ==" && cat headers_get.txt
          echo "== Cuerpo GET ==" && cat body_get.txt || true

      - name: Construir payload
        run: |
          cat > payload.json <<'JSON'
          {
            "secret":      "${{ secrets.WEBAPP_SECRET }}",
            "title":       "${{ github.event.inputs.title }}",
            "start":       "${{ github.event.inputs.start }}",
            "end":         "${{ github.event.inputs.end }}",
            "description": "${{ github.event.inputs.description }}"
          }
          JSON
          echo "== Payload a enviar ==" && cat payload.json

      - name: POST al WebApp (con redirecciones y verboso)
        run: |
          set -e
          curl -v -sS -L --fail-with-body \
            -X POST -H "Content-Type: application/json" \
            -d @payload.json "${{ secrets.WEBAPP_URL }}" \
            -D headers_post.txt -o body_post.txt || true

          echo "== Cabeceras POST ==" && cat headers_post.txt
          echo "== Cuerpo POST ==" && cat body_post.txt

      - name: Validar JSON (si existe) y ok=true
        run: |
          if ! command -v jq >/dev/null; then sudo apt-get update -y && sudo apt-get install -y jq; fi
          if jq empty body_post.txt 2>/dev/null; then
            ok=$(jq -r '.ok // empty' body_post.txt)
            echo "ok=$ok"
            if [ "$ok" != "true" ] && [ "$ok" != "True" ]; then
              echo "Respuesta no OK:"
              cat body_post.txt
              exit 1
            fi
          else
            echo "El cuerpo POST no es JSON. Revísalo arriba."
            exit 1
          fi

      - name: Summary
        run: |
          {
            echo "## Depuración del WebApp"
            echo
            echo "### GET"
            echo '**URL:**' "${{ secrets.WEBAPP_URL }}"
            echo
            echo '**Cabeceras GET:**'
            echo '```'
            sed -n '1,200p' headers_get.txt
            echo '```'
            echo
            echo '**Cuerpo GET:**'
            echo '```'
            sed -n '1,200p' body_get.txt
            echo '```'
            echo
            echo "### POST"
            echo '**Payload:**'
            echo '```json'
            sed -n '1,200p' payload.json
            echo '```'
            echo
            echo '**Cabeceras POST:**'
            echo '```'
            sed -n '1,200p' headers_post.txt
            echo '```'
            echo
            echo '**Cuerpo POST:**'
            echo '```'
            sed -n '1,200p' body_post.txt
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"
